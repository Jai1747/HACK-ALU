CHIP CLA{
    IN x[4],y[4],c0;
    OUT s[4],c4,c3;                     //We output c3,c4 as we need to check overflow for signed

    PARTS:
    Xor(a=x[0],b=y[0],out=p0);          //We obtain p0,p1,p2,p3 pi=xi^yi
    Xor(a=x[1],b=y[1],out=p1);
    Xor(a=x[2],b=y[2],out=p2);
    Xor(a=x[3],b=y[3],out=p3);
    And(a=x[0],b=y[0],out=g0);          //We obtain g0,g1,g2,g3 gi=xi.yi
    And(a=x[1],b=y[1],out=g1);
    And(a=x[2],b=y[2],out=g2);
    And(a=x[3],b=y[3],out=g3);
    cUp(p=p0,c=c0,g=g0,cout=c1);        //Using c0 we get c1,c2,c3,c4
    cUp(p=p1,c=c1,g=g1,cout=c2);
    cUp(p=p2,c=c2,g=g2,cout=C3);
    And(a=C3,b=C3,out=c3);              //C3 is created as c3 is output pin and can't be used as input
    cUp(p=p3,c=C3,g=g3,cout=c4);
    Xor(a=p0,b=c0,out=s[0]);            //si=pi^ci
    Xor(a=p1,b=c1,out=s[1]);
    Xor(a=p2,b=c2,out=s[2]);
    Xor(a=p3,b=C3,out=s[3]);
}